==============================================================================
------------------------------------------------------------------------------
                                                                       *todotxt*
                                   `todotxt`

A lua version of the [`todotxt.vim`](https://github.com/freitass/todo.txt-vim) plugin for Neovim.

MIT License Copyright (c) 2024 Pedro Mendes

==============================================================================
@module 'todotxt'

------------------------------------------------------------------------------
Setup configuration for the todotxt module.
@class Setup
@field todotxt string: Path to the todo.txt file
@field donetxt string: Path to the done.txt file
@field create_commands boolean: Whether to create commands for the functions

------------------------------------------------------------------------------
                                                       *update_buffer_if_open()*
                 `update_buffer_if_open`({file_path}, {lines})
Updates the buffer if it is open.
@param file_path string
@param lines string[]
@return nil

------------------------------------------------------------------------------
                                                                  *sort_table()*
                           `sort_table`({sort_func})
Sorts the tasks in the open buffer by a given function.
@param sort_func function: A function that sorts the lines
@return nil

------------------------------------------------------------------------------
                                                          *sort_by_completion()*
                         `sort_by_completion`({a}, {b})
Sorts two tasks by its comletion status
@param a string: A task
@param b string: Another task
@return boolean | nil

------------------------------------------------------------------------------
                                                   *todotxt.toggle_todo_state()*
                         `todotxt.toggle_todo_state`()
Toggles the todo state of the current line in a todo.txt file.
If the line starts with "x YYYY-MM-DD ", it removes it to mark as not done.
Otherwise, it adds "x YYYY-MM-DD " at the beginning to mark as done.
@return nil

------------------------------------------------------------------------------
                                                      *todotxt.open_todo_file()*
                           `todotxt.open_todo_file`()
Opens the todo.txt file in a new split.
@return nil

------------------------------------------------------------------------------
                                                      *todotxt.open_done_file()*
                           `todotxt.open_done_file`()
Opens the done.txt file in a new split.
@return nil

------------------------------------------------------------------------------
                                                          *todotxt.sort_tasks()*
                             `todotxt.sort_tasks`()
Sorts the tasks in the open buffer by completion status, priority, and text.
Follows the standard todo.txt sorting order:
 1. Incomplete tasks before completed ones
 2. Tasks sorted by priority (A-Z)
 3. Tasks with same priority/completion sorted alphabetically
@return nil

------------------------------------------------------------------------------
                                              *todotxt.sort_tasks_by_priority()*
                       `todotxt.sort_tasks_by_priority`()
Sorts the tasks in the open buffer by priority.
@return nil

------------------------------------------------------------------------------
                                               *todotxt.sort_tasks_by_project()*
                       `todotxt.sort_tasks_by_project`()
Sorts the tasks in the open buffer by project.
@return nil

------------------------------------------------------------------------------
                                               *todotxt.sort_tasks_by_context()*
                       `todotxt.sort_tasks_by_context`()
Sorts the tasks in the open buffer by context.
@return nil

------------------------------------------------------------------------------
                                              *todotxt.sort_tasks_by_due_date()*
                       `todotxt.sort_tasks_by_due_date`()
Sorts the tasks in the open buffer by due date.
@returns boolean

------------------------------------------------------------------------------
                                                      *todotxt.cycle_priority()*
                           `todotxt.cycle_priority`()
Cycles the priority of the current task between A, B, C, and no priority.
@return nil

------------------------------------------------------------------------------
                                                        *todotxt.capture_todo()*
                            `todotxt.capture_todo`()
Captures a new todo entry with the current date.
@return nil

------------------------------------------------------------------------------
                                                     *todotxt.move_done_tasks()*
                          `todotxt.move_done_tasks`()
Moves all done tasks from the todo.txt file to the done.txt file.
@return nil

------------------------------------------------------------------------------
                                                               *todotxt.setup()*
                            `todotxt.setup`({opts})
Setup function
@param opts Setup


 vim:tw=78:ts=8:noet:ft=help:norl: